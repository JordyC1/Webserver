 

          
# Plan Detallado: Gr√°fica "Tendencia Semanal por Tipo" en Panel de Plagas

## üìã Resumen del Plan

Agregar una nueva gr√°fica de l√≠neas que muestre la tendencia diaria de cada tipo de insecto en los √∫ltimos 7 d√≠as, posicionada entre la secci√≥n summary (<mcfile name="insects_summary_card.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\widgets\insects_summary_card.dart"></mcfile>) y las cards de indicadores (<mcfile name="insect_indicators_grid.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\widgets\insect_indicators_grid.dart"></mcfile>).

## üèóÔ∏è Arquitectura y Componentes

### 1. Modelo de Datos
**Archivo:** <mcfile name="chart_models.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\models\chart_models.dart"></mcfile>

**Nuevas clases a agregar:**
```dart
class WeeklyTrendByTypeData {
  final String fecha;
  final String tipoInsecto;
  final int cantidad;
  final DateTime fechaDateTime;
  
  // M√©todos: fromJson, toFlSpot, fechaFormateada
}

class WeeklyTrendPoint {
  final String fecha;
  final Map<String, int> cantidadesPorTipo;
  final DateTime fechaDateTime;
  
  // M√©todos: fromJson, fechaFormateada, getTotalForType
}
```

### 2. Servicio de Datos
**Archivo:** <mcfile name="chart_data_service.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\services\chart_data_service.dart"></mcfile>

**Nuevo m√©todo a agregar:**
```dart
static Future<ChartDataResponse<List<WeeklyTrendPoint>>> fetchWeeklyTrendByType({
  DateTime? startDate,
  DateTime? endDate,
}) async {
  // Utiliza el endpoint existente get_promedio_tipo_por_dia.php
  // Procesa los datos para agrupar por fecha y tipo
  // Retorna datos de los √∫ltimos 7 d√≠as por defecto
}
```

**Endpoint existente a utilizar:** `get_promedio_tipo_por_dia.php` (ya implementado)

### 3. Widget de la Gr√°fica
**Archivo nuevo:** <mcfile name="weekly_trend_by_type_chart.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\widgets\charts\weekly_trend_by_type_chart.dart"></mcfile>

**Clase principal:**
```dart
class WeeklyTrendByTypeChart extends StatefulWidget {
  final DateTime? startDate;
  final DateTime? endDate;
  final double? height;
  final bool showLegend;
}

class _WeeklyTrendByTypeChartState extends State<WeeklyTrendByTypeChart> 
    with SingleTickerProviderStateMixin {
  // Propiedades de estado, animaci√≥n y datos
}
```

**M√©todos principales:**
- `_loadData()`: Carga datos usando <mcsymbol name="fetchWeeklyTrendByType" filename="chart_data_service.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\services\chart_data_service.dart" startline="227" type="function"></mcsymbol>
- `_buildChart()`: Construye el LineChart con m√∫ltiples l√≠neas
- `_buildLineBarsData()`: Crea una l√≠nea por cada tipo de insecto
- `_buildTouchData()`: Maneja tooltips mostrando tipo y cantidad
- `_buildGridData()`: Configuraci√≥n de grid
- `_buildTitlesData()`: T√≠tulos de ejes (fechas en X, cantidades en Y)
- `_buildLegend()`: Leyenda con colores por tipo
- `_buildStats()`: Estad√≠sticas resumidas
- `_getTypeColors()`: Asignaci√≥n de colores por tipo
- `_getMaxY()` y `_getMinY()`: C√°lculo de rangos del eje Y

**Herencia:** Extiende de <mcsymbol name="BaseChartCard" filename="base_chart_card.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\widgets\charts\base_chart_card.dart" startline="1" type="class"></mcsymbol>

**Inspiraci√≥n:** Basado en <mcsymbol name="DailyTrendChart" filename="daily_trend_chart.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\widgets\charts\daily_trend_chart.dart" startline="8" type="class"></mcsymbol> pero con m√∫ltiples l√≠neas

### 4. Integraci√≥n en Panel de Plagas
**Archivo:** <mcfile name="panel_plagas_screen.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\screens\panel_plagas_screen.dart"></mcfile>

**Modificaciones necesarias:**

1. **Import del nuevo widget:**
```dart
import '../widgets/charts/weekly_trend_by_type_chart.dart';
```

2. **Nuevo m√©todo en `_PanelPlagasScreenState`:**
```dart
Widget _buildWeeklyTrendChart() {
  return WeeklyTrendByTypeChart(
    startDate: _getFilteredStartDate(),
    endDate: _getFilteredEndDate(),
    height: 350,
    showLegend: true,
  );
}
```

3. **M√©todos auxiliares para filtros:**
```dart
DateTime? _getFilteredStartDate() {
  // Calcula fecha inicio basada en _selectedTimeFilter
}

DateTime? _getFilteredEndDate() {
  // Calcula fecha fin basada en _selectedTimeFilter
}
```

4. **Modificaci√≥n del m√©todo `build()` en l√≠nea ~95:**
```dart
// Despu√©s de _buildInsectSummaryCard() y antes de _buildInsectIndicatorsGrid()
_buildWeeklyTrendChart(),
const SizedBox(height: 24),
```

## üîÑ Integraci√≥n con Filtros Existentes

### Respuesta a Filtros de Tiempo
El widget responder√° a los filtros existentes en <mcsymbol name="_PanelPlagasScreenState" filename="panel_plagas_screen.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\screens\panel_plagas_screen.dart" startline="25" type="class"></mcsymbol>:

- **`_selectedTimeFilter`**: Variable que controla el per√≠odo de tiempo
- **`_onFilterChanged()`**: M√©todo que se ejecuta al cambiar filtros
- **Integraci√≥n**: El widget recibir√° las fechas calculadas basadas en el filtro seleccionado

### Sincronizaci√≥n de Datos
- Utiliza el mismo patr√≥n de carga que <mcsymbol name="_loadInsectIndicators" filename="panel_plagas_screen.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\screens\panel_plagas_screen.dart" startline="60" type="function"></mcsymbol>
- Se recarga autom√°ticamente cuando cambian los filtros
- Maneja estados de loading y error consistentemente

## üé® Dise√±o y UX

### Posicionamiento
- **Ubicaci√≥n**: Entre <mcsymbol name="_buildInsectSummaryCard" filename="panel_plagas_screen.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\screens\panel_plagas_screen.dart" startline="200" type="function"></mcsymbol> y <mcsymbol name="_buildInsectIndicatorsGrid" filename="panel_plagas_screen.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\screens\panel_plagas_screen.dart" startline="250" type="function"></mcsymbol>
- **Espaciado**: 24px arriba y abajo
- **Responsive**: Adapta a diferentes tama√±os de pantalla

### Caracter√≠sticas Visuales
- **Tipo**: Gr√°fica de l√≠neas m√∫ltiples (LineChart de fl_chart)
- **Colores**: Paleta consistente con <mcfile name="app_theme.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\theme\app_theme.dart"></mcfile>
- **Animaciones**: Transiciones suaves al cargar y cambiar datos
- **Interactividad**: Tooltips al tocar puntos, leyenda clickeable
- **Estados**: Loading, error y sin datos manejados por <mcsymbol name="BaseChartCard" filename="base_chart_card.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\widgets\charts\base_chart_card.dart" startline="8" type="class"></mcsymbol>

### Componentes UI
- **T√≠tulo**: "Tendencia Semanal por Tipo"
- **Subt√≠tulo**: "√öltimos 7 d√≠as" (din√°mico seg√∫n filtro)
- **Leyenda**: Muestra tipos de insectos con colores
- **Estad√≠sticas**: Total por tipo, tendencias, picos
- **Bot√≥n refresh**: Para recargar datos manualmente

## üìÅ Archivos Afectados

### Archivos Nuevos
1. <mcfile name="weekly_trend_by_type_chart.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\widgets\charts\weekly_trend_by_type_chart.dart"></mcfile>

### Archivos Modificados
1. <mcfile name="chart_models.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\models\chart_models.dart"></mcfile> - Agregar modelos de datos
2. <mcfile name="chart_data_service.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\services\chart_data_service.dart"></mcfile> - Agregar m√©todo de servicio
3. <mcfile name="panel_plagas_screen.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\screens\panel_plagas_screen.dart"></mcfile> - Integrar widget

### Archivos de Referencia (No modificar)
- <mcfile name="base_chart_card.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\widgets\charts\base_chart_card.dart"></mcfile> - Componente base
- <mcfile name="daily_trend_chart.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\widgets\charts\daily_trend_chart.dart"></mcfile> - Referencia de implementaci√≥n
- <mcfile name="stacked_bar_chart.dart" path="c:\Users\adria\OneDrive\Escritorio\Trabajo\ProyectoEmilJordy\Webserver\lib\widgets\charts\stacked_bar_chart.dart"></mcfile> - Referencia para m√∫ltiples tipos

## üîß Implementaci√≥n T√©cnica

### Dependencias
- **fl_chart**: Para gr√°ficas (ya instalado)
- **http**: Para requests (ya instalado)
- **intl**: Para formateo de fechas (ya instalado)

### Patr√≥n de Datos
- Reutiliza endpoint existente `get_promedio_tipo_por_dia.php`
- Procesa datos para mostrar √∫ltimos 7 d√≠as
- Agrupa por fecha y tipo de insecto
- Calcula tendencias y estad√≠sticas

### Gesti√≥n de Estado
- Patr√≥n StatefulWidget con AnimationController
- Estados: loading, loaded, error, empty
- Recarga autom√°tica al cambiar filtros
- Cach√© local para optimizaci√≥n

### Responsive Design
- Altura adaptable seg√∫n contenido
- Leyenda colapsable en pantallas peque√±as
- Grid y t√≠tulos ajustables
- Tooltips optimizados para touch

Este plan proporciona una implementaci√≥n completa y detallada que se integra perfectamente con la arquitectura existente, reutiliza componentes y servicios disponibles, y mantiene la consistencia visual y funcional del panel de plagas.
        