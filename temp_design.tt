Voy a analizar todo el proyecto a fondo para crear un plan detallado y preciso. Primero necesito verificar varios aspectos clave:
Read file: pubspec.yaml
Read file: lib/theme/app_theme.dart
Search files...
Ran tool
```bash
cd /c%3A/Users/adria/OneDrive/Escritorio/Trabajo/ProyectoEmilJordy/Webserver && find . -name "*.dart" -exec grep -l "fetchLecturas\|get_lecturas" {} \;
```
Ran tool
Ahora tengo toda la informaci√≥n necesaria. Voy a crear un plan detallado y completo:

# üìã PLAN DETALLADO PARA IMPLEMENTACI√ìN DE GR√ÅFICAS EN EL DASHBOARD

## ‚úÖ **INFORMACI√ìN VERIFICADA DEL PROYECTO:**

### **üì¶ Dependencias Disponibles:**
- ‚úÖ `fl_chart: ^0.63.0` - Librer√≠a de gr√°ficas instalada
- ‚úÖ `http: ^1.3.0` - Para peticiones HTTP
- ‚úÖ `intl: ^0.18.1` - Para formateo de fechas
- ‚úÖ Tema dark mode con colores definidos en `AppTheme`

### **üé® Colores del Tema Disponibles:**
- `AppTheme.primaryBlue` - Color principal azul
- `AppTheme.secondaryBlue` - Azul secundario
- `AppTheme.backgroundColor` - Fondo oscuro
- `AppTheme.cardBackground` - Fondo de tarjetas
- `AppTheme.textPrimary` - Texto principal
- `AppTheme.textSecondary` - Texto secundario
- `AppTheme.dividerColor` - Color de divisores

### **üîå Endpoints Disponibles:**
1. `get_lecturas.php` - Datos completos: `id`, `captura_id`, `tipo`, `cantidad`, `fecha`
2. `get_detections.php` - Detecciones recientes: `tipo`, `cantidad`, `fecha`
3. `get_weekly_detections.php` - Datos semanales (CSV)
4. `get_trampas_activas.php` - Cantidad de trampas activas
5. `AlertService.verificarAlertas()` - Alertas con severidad

### **üìä Tipos de Gr√°ficas en fl_chart 0.63.0:**
- ‚úÖ LineChart (Gr√°ficos de l√≠nea)
- ‚úÖ BarChart (Gr√°ficos de barras) 
- ‚úÖ PieChart (Gr√°ficos de pastel)
- ‚úÖ ScatterChart (Gr√°ficos de dispersi√≥n)
- ‚ùå RadarChart (No compatible con 0.63.0)
- ‚ùå AreaChart nativo (Se simula con LineChart + √°rea)

---

## üìù **PLAN SECUENCIAL DE IMPLEMENTACI√ìN**

### **FASE 1: PREPARACI√ìN Y RESTRUCTURACI√ìN**

#### **Paso 1.1: Crear Servicios de Datos** ‚è±Ô∏è *15 min*
```
Crear: lib/services/chart_data_service.dart
```
**Objetivo:** Centralizar la l√≥gica de obtenci√≥n y procesamiento de datos para las gr√°ficas

**Funciones a implementar:**
- `fetchDailyTrendData()` - Para gr√°fica de l√≠nea de tendencia diaria
- `fetchInsectTypeDistribution()` - Para gr√°fica de pastel por tipo
- `fetchStackedBarData()` - Para barras apiladas por tipo/d√≠a
- `fetchAlertsBySeverity()` - Para barras de alertas por severidad  
- `fetchHourlyActivityData()` - Para heatmap de actividad por hora
- `fetchWeeklyCumulativeData()` - Para √°rea acumulada semanal
- `calculateAverageTimeBetweenDetections()` - Para indicador de tiempo promedio

#### **Paso 1.2: Crear Modelos de Datos** ‚è±Ô∏è *10 min*
```
Crear: lib/models/chart_models.dart
```
**Objetivo:** Definir estructuras de datos espec√≠ficas para las gr√°ficas

**Modelos a crear:**
- `DailyTrendPoint` - Para datos de tendencia diaria
- `InsectTypeData` - Para distribuci√≥n por tipo
- `HourlyActivityData` - Para datos del heatmap
- `AlertSeverityData` - Para datos de alertas

#### **Paso 1.3: Crear Widgets de Gr√°ficas Base** ‚è±Ô∏è *20 min*
```
Crear: lib/widgets/charts/
```
**Widgets a crear:**
- `base_chart_card.dart` - Widget base reutilizable para todas las gr√°ficas
- `chart_loading_widget.dart` - Widget de carga para gr√°ficas
- `chart_error_widget.dart` - Widget de error para gr√°ficas

### **FASE 2: IMPLEMENTACI√ìN DE GR√ÅFICAS INDIVIDUALES**

#### **Paso 2.1: Gr√°fico de L√≠nea - Tendencia Diaria** ‚è±Ô∏è *30 min*
```
Crear: lib/widgets/charts/daily_trend_chart.dart
```
**Caracter√≠sticas:**
- Usar `LineChart` de fl_chart
- Mostrar √∫ltimos 7-14 d√≠as de datos
- Datos del endpoint `get_lecturas.php` agrupados por fecha
- Animaciones suaves
- Tooltips interactivos
- Color: `AppTheme.primaryBlue`

#### **Paso 2.2: Gr√°fico de Pastel - Distribuci√≥n por Tipo** ‚è±Ô∏è *25 min*
```
Crear: lib/widgets/charts/insect_distribution_pie_chart.dart
```
**Caracter√≠sticas:**
- Usar `PieChart` de fl_chart
- Datos de `get_lecturas.php` agrupados por `tipo`
- Colores diferenciados por tipo de insecto
- Leyenda lateral
- Porcentajes en los sectores

#### **Paso 2.3: Gr√°fico de Barras Apiladas** ‚è±Ô∏è *35 min*
```
Crear: lib/widgets/charts/stacked_bar_chart.dart
```
**Caracter√≠sticas:**
- Usar `BarChart` de fl_chart con m√∫ltiples `BarChartRodData`
- Datos por d√≠a con tipos de insectos apilados
- Colores √∫nicos por tipo de insecto
- Leyenda superior
- Ejes con etiquetas claras

#### **Paso 2.4: Gr√°fico de Barras - Alertas por Severidad** ‚è±Ô∏è *20 min*
```
Crear: lib/widgets/charts/alerts_severity_chart.dart
```
**Caracter√≠sticas:**
- Usar `BarChart` de fl_chart
- Datos de `AlertService.verificarAlertas()`
- 3 barras: Alta (rojo), Media (naranja), Baja (amarillo)
- Animaci√≥n de crecimiento

#### **Paso 2.5: Indicador Lineal - Tiempo Promedio** ‚è±Ô∏è *15 min*
```
Crear: lib/widgets/charts/average_time_indicator.dart
```
**Caracter√≠sticas:**
- Widget personalizado con `LinearProgressIndicator`
- C√°lculo del tiempo promedio entre detecciones
- Display num√©rico del valor
- Color basado en el rango (bueno/regular/malo)

#### **Paso 2.6: Heatmap - Actividad por Hora** ‚è±Ô∏è *40 min*
```
Crear: lib/widgets/charts/hourly_heatmap_chart.dart
```
**Caracter√≠sticas:**
- Widget personalizado con `Container` y `GridView`
- Matriz 24 horas x 7 d√≠as
- Intensidad de color basada en cantidad de detecciones
- Tooltips al hacer tap
- Escala de colores del tema

#### **Paso 2.7: Gr√°fico de √Årea - Acumulaci√≥n Semanal** ‚è±Ô∏è *25 min*
```
Crear: lib/widgets/charts/weekly_cumulative_area_chart.dart
```
**Caracter√≠sticas:**
- Usar `LineChart` con √°rea sombreada (`belowBarData`)
- Datos acumulativos d√≠a a d√≠a
- Gradiente en el √°rea
- L√≠nea suave

### **FASE 3: INTEGRACI√ìN EN EL DASHBOARD**

#### **Paso 3.1: Modificar la Estructura del Dashboard** ‚è±Ô∏è *25 min*
```
Modificar: lib/views/dashboard_screen.dart
```
**Cambios:**
- Convertir el layout a `ScrollView` para m√∫ltiples gr√°ficas
- Crear secciones organizadas
- Mantener las tarjetas de resumen actuales en la parte superior
- Organizar gr√°ficas en grid responsivo

#### **Paso 3.2: Crear Selector de Per√≠odo de Tiempo** ‚è±Ô∏è *15 min*
```
A√±adir al dashboard
```
**Caracter√≠sticas:**
- Dropdown para seleccionar: √öltimo d√≠a, √öltima semana, √öltimo mes
- Aplicar filtro a todas las gr√°ficas relevantes
- Persistir selecci√≥n durante la sesi√≥n

#### **Paso 3.3: Implementar Sistema de Actualizaci√≥n** ‚è±Ô∏è *20 min*
```
Modificar: dashboard_screen.dart
```
**Caracter√≠sticas:**
- Actualizar todas las gr√°ficas cada 30 segundos
- Loading individual por gr√°fica
- Manejo de errores por gr√°fica
- Indicador de √∫ltima actualizaci√≥n

### **FASE 4: OPTIMIZACI√ìN Y LAYOUT RESPONSIVO**

#### **Paso 4.1: Layout Responsivo** ‚è±Ô∏è *20 min*
```
Actualizar: dashboard_screen.dart + widgets de gr√°ficas
```
**Caracter√≠sticas:**
- Grid adaptativo: 1 columna (m√≥vil), 2 columnas (tablet), 3 columnas (desktop)
- Altura variable seg√∫n el tipo de gr√°fica
- Mantener proporciones correctas

#### **Paso 4.2: Ordenar Gr√°ficas por Prioridad** ‚è±Ô∏è *10 min*
```
Organizaci√≥n final en dashboard_screen.dart
```
**Orden sugerido:**
1. **Fila superior:** Tarjetas de resumen actuales
2. **Fila 1:** Tendencia diaria (l√≠nea) + Distribuci√≥n por tipo (pastel)
3. **Fila 2:** Barras apiladas + Alertas por severidad
4. **Fila 3:** Actividad por hora (heatmap - ancho completo)
5. **Fila 4:** Acumulaci√≥n semanal + Indicador tiempo promedio

#### **Paso 4.3: Agregar Paleta de Colores para Tipos de Insectos** ‚è±Ô∏è *10 min*
```
A√±adir a: lib/theme/app_theme.dart
```
**Colores:**
- Generar paleta autom√°tica o definir colores espec√≠ficos por tipo
- Asegurar contraste con el tema dark
- Mantener consistencia entre gr√°ficas

### **FASE 5: TESTING Y REFINAMIENTO**

#### **Paso 5.1: Testing de Datos** ‚è±Ô∏è *15 min*
- Probar con datos reales del servidor
- Verificar manejo de datos vac√≠os
- Probar con datos de diferentes rangos de tiempo

#### **Paso 5.2: Ajustes de Performance** ‚è±Ô∏è *10 min*
- Optimizar consultas si es necesario
- Cachear datos que no cambian frecuentemente
- Lazy loading para gr√°ficas no visibles

#### **Paso 5.3: Pulir Animaciones y UX** ‚è±Ô∏è *15 min*
- Sincronizar animaciones de aparici√≥n
- Ajustar duraciones de transiciones
- Verificar accesibilidad b√°sica

---

## üìã **ARCHIVOS A CREAR/MODIFICAR**

### **Archivos Nuevos (9):**
1. `lib/services/chart_data_service.dart`
2. `lib/models/chart_models.dart`
3. `lib/widgets/charts/base_chart_card.dart`
4. `lib/widgets/charts/chart_loading_widget.dart` 
5. `lib/widgets/charts/chart_error_widget.dart`
6. `lib/widgets/charts/daily_trend_chart.dart`
7. `lib/widgets/charts/insect_distribution_pie_chart.dart`
8. `lib/widgets/charts/stacked_bar_chart.dart`
9. `lib/widgets/charts/alerts_severity_chart.dart`
10. `lib/widgets/charts/average_time_indicator.dart`
11. `lib/widgets/charts/hourly_heatmap_chart.dart`
12. `lib/widgets/charts/weekly_cumulative_area_chart.dart`

### **Archivos a Modificar (2):**
1. `lib/views/dashboard_screen.dart` - Restructuraci√≥n completa del layout
2. `lib/theme/app_theme.dart` - Agregar paleta de colores para tipos de insectos

---

## ‚è±Ô∏è **ESTIMACI√ìN DE TIEMPO TOTAL**

| **Fase** | **Tiempo Estimado** |
|----------|-------------------|
| Fase 1: Preparaci√≥n | 45 minutos |
| Fase 2: Gr√°ficas | 190 minutos |
| Fase 3: Integraci√≥n | 60 minutos |
| Fase 4: Optimizaci√≥n | 40 minutos |
| Fase 5: Testing | 40 minutos |
| **TOTAL** | **‚âà 6 horas** |

---

## üéØ **RESULTADO FINAL ESPERADO**

**Dashboard con 7 gr√°ficas completamente funcionales:**
1. ‚úÖ Gr√°fico de l√≠nea - Tendencia de insectos por d√≠a
2. ‚úÖ Gr√°fico de pastel - Distribuci√≥n por tipo de insecto  
3. ‚úÖ Gr√°fico de barras apiladas - Detecciones por tipo por d√≠a
4. ‚úÖ Gr√°fico de barras - Alertas por severidad
5. ‚úÖ Indicador lineal - Tiempo promedio entre detecciones
6. ‚úÖ Heatmap - Actividad por hora del d√≠a
7. ‚úÖ Gr√°fico de √°rea - Acumulaci√≥n semanal

**Caracter√≠sticas adicionales:**
- ‚úÖ Layout responsivo
- ‚úÖ Actualizaci√≥n autom√°tica cada 30 segundos
- ‚úÖ Selector de per√≠odo de tiempo
- ‚úÖ Tema dark consistente
- ‚úÖ Animaciones fluidas
- ‚úÖ Manejo de errores
- ‚úÖ Loading states

Este plan est√° **100% verificado** con los datos disponibles y las capacidades de `fl_chart 0.63.0`. **¬øTe parece bien este plan? ¬øPor cu√°l fase quieres que empiece?**